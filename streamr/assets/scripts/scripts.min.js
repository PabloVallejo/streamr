

/*
  Application config file
*/


(function() {
  var list, math, number, numebr, opposite, square;

  window.App = {
    Handlers: {},
    Models: {},
    Controllers: {},
    Views: {},
    Helpers: {}
  };

  window.App.Helpers.Utilities = {
    hyphenToUnderscore: function(string) {
      var _this = this;
      return string.replace(/([-])/g, $1)(function() {
        return "_";
      });
    },
    mapFormInputs: function(data, type, dropEmpty) {
      var formData,
        _this = this;
      formData = type || [];
      $(data).each(function(key, val) {
        var replaced;
        replaced = _this.hyphenToUnderscore(val.name);
        if (dropEmpty) {
          if (val.value) {
            return formData[replaced] = val.name;
          }
        } else {
          return formData[replaced] = val.value;
        }
      });
      return formData;
    },
    getFormData: function(form, dropEmpty) {
      return console.log('Sample');
    }
  };

  numebr = 43;

  opposite = true;

  if (opposite) {
    number = -42;
  }

  square = function(x) {
    return x * x;
  };

  list = [1, 2, 3, 4];

  math = {
    root: Math.sqrt,
    square: square,
    cube: function(x) {
      return x * square(x);
    }
  };

  console.log('Hello Coffee script');

  (function(window, $, view, controller, utils) {
    var User;
    User = Gillie.extend({
      initialize: function() {
        return console.log('Hello Gillie');
      },
      events: {
        'submit .login-page .login-form': 'login'
      },
      login: function(e) {
        var data;
        e.preventDefault();
        data = $(e.currentTarget).serializeArray();
        data = utils.mapFormInputs(data);
        return console.log(data);
      }
    });
    return window.App.Handlers.User = new User;
  })(this, jQuery, window.App.Views.User, window.App.Controllers.User, window.App.Helpers.Utilities);

}).call(this);
